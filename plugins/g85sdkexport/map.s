! Generated by Tiles Creator, the graphics resources editor for Casio.
! This file contain the map allocating function (aMap).


	.section ".text"
	.global _aMap
	.type _aMap, @function
	.align 2

	! aMap function, C prototype : Map aMap(int mapId)
_aMap:
	mov.l	r13, @-r15
	sts	pr, r0
	mov.l	r0, @-r15
	mov	r2, r13		! Return struct adress value in r13
	mov.l	r9, @-r15
	mov.l	r8, @-r15
	mov.l	MapNumber, r0
	cmp/hi	r4, r0
	bf	Map_ReturnError

	mov.l	Map_JumpTableAddress, r0
	shll2	r4		! Offset in jtable * sizeof(int)
	add	r4, r0
	mov.l	@r0, r8
	mov.l	@r8+, r4

	! Call aTileset :
	mov	r13, r2
	mov.l	Map_aTilesetAddress, r0
	jsr	@r0
	nop

	mov.w	@r8+, r0
	mov.w	r0, @(16, r13)	! Copy Width into return struct
	mov	r0, r1		! r1 is now the width
	mov.w	@r8+, r0
	mov.w	r0, @(18, r13)	! Copy Height into return struct
	
#ifndef COPY_ON_RAM
	mov	r8, r0
	mov.l	r0, @(20, r13)
	bra	Map_End
	nop

#else
	! Malloc of the map array (size = width*height)
	mulu.w	r0, r1
	sts	macl, r9
	mov	r9, r4
	mov.l	MallocSyscallID, r0
	mov.l	SyscallAddress, r1
	jsr	@r1
	nop
	tst	r0, r0		! Test malloc return, if == 0, then malloc error...
	bt	Map_ReturnError
	mov.l	r0, @(20, r13)
	mov 	r0, r3


	! Copy each byte of the map array :
	mov	r9, r1		! Number of loops
	mov	#0, r0
Map_CopyMap:
	mov.b	@(r0, r8), r4
	mov.b	r4, @(r0, r3)
	dt	r9
	bf/s	Map_CopyMap
	add	#1, r0

	bra	Map_End
	nop
#endif

Map_ReturnError:
	! In this case, init the return struct, then end of function.
	mov	#0, r0
	mov.l	r0, @r13
	mov.l	r0, @(4, r13)
	mov.l	r0, @(8, r13)
	mov.l	r0, @(12, r13)
	mov.l	r0, @(16, r13)
	mov.l	r0, @(20, r13)

Map_End:
	mov.l	@r15+, r8
	mov.l	@r15+, r9
	mov.l	@r15+, r0
	lds	r0, pr	
	rts
	mov.l	@r15+, r13


	.align 4
Map_JumpTableAddress:
	.long	Map_JTable
Map_aTilesetAddress:
	.long	_aTileset

